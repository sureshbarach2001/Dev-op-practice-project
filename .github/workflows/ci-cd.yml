# name: CI/CD Pipeline

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:13
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: sain
#           POSTGRES_DB: devop
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Create log directory
#         run: mkdir -p Backend/log

#       - name: Install PostgreSQL dependencies
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y libpq-dev postgresql-client

#       - name: Install backend dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r Backend/requirements.txt

#       - name: Configure Django environment
#         env:
#           DATABASE_URL: postgres://postgres:sain@localhost:5432/devop
#           SECRET_KEY: ${{ django-insecure-+#fu2#^b_uza*o&-f4ymaer0-$$mtu%d32p$z%q-odph697!4$ }}

#       - name: Run Django migrations
#         run: |
#           cd Backend
#           python manage.py makemigrations
#           python manage.py migrate

#       # Rest of your steps...

#       - name: Run backend tests
#         run: |
#           cd Backend
#           python manage.py test

#       - name: Install frontend dependencies
#         run: |
#           cd frontend
#           npm install

#       - name: Run frontend tests
#         run: |
#           cd frontend
#           npm test -- --watchAll=false

#   build-and-push-docker:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: ./Backend/Dockerfile
#           push: true
#           tags: |
#             sureshbarach2001/dev-op-practice-project:latest
#             sureshbarach2001/dev-op-practice-project:${{ github.sha }}

name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: sain
          POSTGRES_DB: devop
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:sain@localhost:5432/devop
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create log directory
        run: mkdir -p Backend/log

      - name: Install PostgreSQL dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql-client

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend/requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done
          echo "PostgreSQL is ready."

      - name: Run Django migrations
        run: |
          cd Backend
          python manage.py makemigrations
          python manage.py migrate

      - name: Run backend tests
        run: |
          cd Backend
          python manage.py test

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # - name: Run frontend tests
      #   run: |
      #     cd frontend
      #     npm test -- --watchAll=false

  build-and-push-docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          file: ./Backend/Dockerfile
          push: true
          tags: |
            sureshbarach2001/dev-op-practice-project:latest
            sureshbarach2001/dev-op-practice-project:${{ github.sha }}
